import pygame
from pygame.locals import *
from OpenGL.GL import *
from OpenGL.GLU import *

def draw_cube():
    vertices = [
        [1, 1, 1],
        [1, 1, -1],
        [1, -1, -1],
        [1, -1, 1],
        [-1, 1, 1],
        [-1, -1, -1],
        [-1, -1, 1],
        [-1, 1, -1]
    ]
    
    # Define the triangles for each face of the cube
    triangles = [
        # Front face
        (0, 1, 3), (1, 2, 3),
        # Back face
        (4, 5, 6), (4, 6, 7),
        # Right face
        (0, 3, 4), (3, 6, 4),
        # Left face
        (1, 7, 2), (1, 5, 7),
        # Top face
        (0, 4, 7), (0, 7, 1),
        # Bottom face
        (2, 5, 6), (2, 6, 3)
    ]
    
    # Define colors for each pair of triangles
    colors = [
        (1, 0, 0), (1, 0, 0),  # Red for front
        (0, 1, 0), (0, 1, 0),  # Green for back
        (0, 0, 1), (0, 0, 1),  # Blue for right
        (1, 1, 0), (1, 1, 0),  # Yellow for left
        (0, 1, 1), (0, 1, 1),  # Cyan for top
        (1, 0, 1), (1, 0, 1)   # Magenta for bottom
    ]
    
    for i, triangle in enumerate(triangles):
        glColor3f(*colors[i])  # Set color for the triangles
        glBegin(GL_TRIANGLES)
        for vertex in triangle:
            glVertex3fv(vertices[vertex])
        glEnd()

pygame.init()
display = (800, 600)
pygame.display.set_mode(display, DOUBLEBUF | OPENGL)
pygame.display.set_caption("Cube with Triangles and Colors")
glEnable(GL_DEPTH_TEST)  # Enable depth testing
gluPerspective(45, (display[0] / display[1]), 0.1, 50.0)
glTranslatef(0, 0, -5)
glScalef(0.5, 0.5, 0.5)  # Scale down the cube

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_a:  # Move left
                glTranslatef(-1, 0, 0)
            if event.key == pygame.K_d:  # Move right
                glTranslatef(1, 0, 0)
            if event.key == pygame.K_w:  # Move up
                glTranslatef(0, 1, 0)
            if event.key == pygame.K_s:  # Move down
                glTranslatef(0, -1, 0)
            if event.key == pygame.K_q:  # Move forward
                glTranslatef(0, 0, 1)
            if event.key == pygame.K_e:  # Move backward
                glTranslatef(0, 0, -1)

    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
    glRotatef(1, 1, 1, 1)  # Rotate the cube
    draw_cube()
    
    pygame.display.flip()
    pygame.time.wait(15)
